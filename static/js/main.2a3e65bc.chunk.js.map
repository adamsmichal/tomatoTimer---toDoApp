{"version":3,"sources":["components/Timer/Clock/Clock.js","components/Timer/StartButton/StartButton.js","components/Timer/SettingsButton/SettingsButton.js","components/Timer/SettingsPopup/SettingsPopup.js","components/Timer/Timer.js","components/ToDo/AddTask/AddTask.js","components/ToDo/Task/Task.js","components/ToDo/TaskList/TaskList.js","components/ToDo/ToDo.js","components/Header/Instruction/Instruction.js","components/Header/Header.js","components/App.js","serviceWorker.js","index.js","assets/sound/niceSound.wav"],"names":["Clock","props","className","hr","min","sec","StartButton","onClick","startCounting","active","SettingsButton","openSettings","SettingsPopup","content","subHr","addHr","subMin","addMin","subShortBreak","shortBreak","addShortBreak","subLongBreak","longBreak","addLongBreak","isOpen","breakTime","Timer","state","workHours","workMinutes","counter","handleStartButtonClick","clearInterval","idInterval","setInterval","countdown","setState","playSound","audio","Audio","niceSound","volume","play","breakCountdown","doneTasks","resetAddTasks","handleSettingsButtonClick","handleAddHrClick","handleSubHrClick","handleAddMinClick","handleSubMinClick","handleAddShortBreakClick","handleSubShortBreakClick","handleAddLongBreakClick","handleSubLongBreakClick","this","Component","AddTask","text","checked","isCorrect","handleText","e","target","value","handleCheckbox","handleAddClick","length","addTask","handleAddKeyDown","keyCode","onKeyDown","type","placeholder","onChange","id","Task","task","important","time","addTime","Date","toLocaleTimeString","style","color","changeTaskStatus","deleteTask","endTime","TaskList","tasks","filter","done","sort","a","b","activeTasks","map","key","slice","ToDo","handleDoneButtonClick","forEach","getTime","addDoneTasks","handleDeleteButtonClick","console","log","index","findIndex","splice","ifImportant","prevState","Instruction","closeInstructionPopup","Header","handleOpenButton","handleCloseButton","App","Fragment","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","module","exports"],"mappings":"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","file":"static/js/main.2a3e65bc.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Clock = (props) => {\r\n    return (\r\n        <div className={'clock'}>\r\n            {props.hr > 9 ? props.hr : `0${props.hr}`} : {props.min > 9 ? props.min : `0${props.min}`} : {props.sec > 9 ? props.sec : `0${props.sec}`}\r\n        </div>\r\n    );\r\n}\r\n \r\nexport default Clock;","import React from 'react';\r\n\r\nconst StartButton = (props) => {\r\n    return (\r\n        <button className={'functional-btn start-btn'} onClick={props.startCounting}>{props.active ? \"Stop\" : \"Start\"}</button>\r\n    );\r\n}\r\n \r\nexport default StartButton;","import React from 'react';\r\n\r\nconst SettingsButton = (props) => {\r\n    return (\r\n        <button className={'functional-btn settings-btn'} onClick={props.openSettings}>Settings</button>\r\n    );\r\n}\r\n \r\nexport default SettingsButton;","import React from 'react';\r\n\r\nconst SettingsPopup = (props) => {\r\n\r\n    let content = (\r\n        <div className={'settings-popup'}>\r\n            <div className={'settings-popup__item'}>\r\n                <button onClick={props.subHr}>-</button>Hours: {props.hr}<button onClick={props.addHr}>+</button>\r\n            </div>\r\n            <div className={'settings-popup__item'}>\r\n                <button onClick={props.subMin}>-</button>Minute: {props.min}<button onClick={props.addMin}>+</button>\r\n            </div>\r\n            <div className={'settings-popup__item'}>\r\n                <button onClick={props.subShortBreak}>-</button>Short break: {props.shortBreak} min<button onClick={props.addShortBreak}>+</button>\r\n            </div>\r\n            <div className={'settings-popup__item'}>\r\n                <button onClick={props.subLongBreak}>-</button>\r\n                    <div>\r\n                        Long break: {props.longBreak} min\r\n                        <br/>\r\n                        <span className={'settings-popup__caption'}>(every 3 periods)</span>\r\n                    </div>\r\n                <button onClick={props.addLongBreak}>+</button>\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n    if (!props.isOpen) {\r\n        content = null;\r\n    } else if (!props.breakTime) {\r\n        content = (\r\n            <p className={'settings-popup__annotation'}>It's time to rest!</p>\r\n        )\r\n    }\r\n\r\n    return(\r\n        <div>{content}</div>\r\n    );\r\n}\r\n \r\nexport default SettingsPopup;","import React, { Component } from 'react';\r\nimport Clock from './Clock/Clock';\r\nimport StartButton from './StartButton/StartButton';\r\nimport SettingsButton from './SettingsButton/SettingsButton';\r\nimport SettingsPopup from './SettingsPopup/SettingsPopup';\r\nimport niceSound from '../../assets/sound/niceSound.wav';\r\n\r\nclass Timer extends Component {\r\n    state = { \r\n        hr: 0,\r\n        min: 30,\r\n        sec: 0,\r\n        workHours: 0,\r\n        workMinutes: 30,\r\n        shortBreak: 7,\r\n        longBreak: 15,\r\n        counter: 1,\r\n        breakTime: true,\r\n        active: false,\r\n        isOpen: false,\r\n    }\r\n    \r\n    //set interval and call counting function\r\n    handleStartButtonClick = () => {\r\n        if(this.state.active) {\r\n            clearInterval(this.idInterval);\r\n        } else {\r\n            this.idInterval = setInterval(() => this.countdown(), 1000)\r\n        }\r\n\r\n        this.setState({\r\n            active: !this.state.active,\r\n            isOpen: false\r\n        })\r\n    }\r\n\r\n    playSound = () => {\r\n        const audio = new Audio(niceSound);\r\n        audio.volume = 0.2;\r\n        audio.play();\r\n    }\r\n\r\n    //start counting and make some noise when finish\r\n    countdown = () => {\r\n        if(this.state.sec === 0) {\r\n           if(this.state.min === 0) {\r\n               if(this.state.hr === 0) {\r\n                   this.playSound();\r\n                   clearInterval(this.idInterval);\r\n                   this.setState({\r\n                       active: !this.state.active\r\n                   })\r\n                   this.breakCountdown();\r\n               } else {\r\n                   this.setState({\r\n                       hr: this.state.hr - 1,\r\n                       min: this.state.min + 59\r\n                   })\r\n               }\r\n           } else {\r\n               this.setState({\r\n                   min: this.state.min -1,\r\n                   sec: this.state.sec + 59,\r\n               })\r\n           }\r\n        } else {\r\n            this.setState({\r\n                sec: this.state.sec - 1\r\n            })\r\n        }\r\n    }\r\n\r\n    //change clock value for break time and work time \r\n    breakCountdown = () => {\r\n        if (this.state.breakTime) {\r\n            if ((this.state.counter % 3) === 0) {\r\n                this.setState({\r\n                    hr: 0,\r\n                    min: this.state.longBreak + this.props.doneTasks,\r\n                    sec: 0,\r\n                    breakTime: false,\r\n                })\r\n            } else {\r\n                this.setState({\r\n                    hr: 0,\r\n                    min: this.state.shortBreak + this.props.doneTasks,\r\n                    sec: 0,\r\n                    breakTime: false,\r\n                })\r\n            }\r\n        } else if (this.state.breakTime === false) {\r\n            this.setState({\r\n                hr: this.state.workHours,\r\n                min: this.state.workMinutes,\r\n                sec: 0,\r\n                breakTime: true,\r\n                counter: this.state.counter + 1,\r\n            })\r\n            this.props.resetAddTasks();\r\n        }\r\n    }\r\n\r\n    //open and close settings popup(also checks if user can do it)\r\n    handleSettingsButtonClick = () => {\r\n        if (this.state.active === false) {\r\n            this.setState({\r\n                isOpen: !this.state.isOpen\r\n            })\r\n        }\r\n    }\r\n\r\n    handleAddHrClick = () => {\r\n        if (this.state.workHours < 5 && this.state.hr < 5){\r\n            this.setState({\r\n                hr: this.state.hr + 1,\r\n                workHours: this.state.workHours + 1,\r\n                sec: 0,\r\n            })\r\n        }\r\n    }\r\n\r\n    handleSubHrClick = () => {\r\n        if (this.state.workHours > 0 && this.state.hr > 0) {\r\n            this.setState({\r\n                hr: this.state.hr - 1,\r\n                workHours: this.state.workHours - 1,\r\n                sec: 0, \r\n            })\r\n        }\r\n    }\r\n\r\n    handleAddMinClick = () => {\r\n        if (this.state.workMinutes < 60 && this.state.min < 60) {\r\n            this.setState({\r\n                min: this.state.min + 1,\r\n                workMinutes: this.state.workMinutes + 1,\r\n                sec: 0,\r\n            })\r\n        }\r\n    }\r\n\r\n    handleSubMinClick = () => {\r\n        if (this.state.workMinutes > 1 && this.state.min > 1) {\r\n            this.setState({\r\n                min: this.state.min - 1,\r\n                workMinutes: this.state.workMinutes - 1,\r\n                sec: 0,\r\n            })\r\n        }\r\n    }\r\n\r\n    handleAddShortBreakClick = () => {\r\n        if (this.state.shortBreak < 9) {\r\n            this.setState({\r\n                shortBreak: this.state.shortBreak + 1,\r\n            })\r\n        }\r\n    }\r\n\r\n    handleSubShortBreakClick = () => {\r\n        if (this.state.shortBreak > 1) {\r\n            this.setState({\r\n                shortBreak: this.state.shortBreak - 1, \r\n            })\r\n        }\r\n    }\r\n\r\n    handleAddLongBreakClick = () => {\r\n        if (this.state.longBreak < 20) {\r\n            this.setState({\r\n                longBreak: this.state.longBreak + 1, \r\n            })\r\n        }\r\n    }\r\n\r\n    handleSubLongBreakClick = () => {\r\n        if (this.state.longBreak > 10) {\r\n            this.setState({\r\n                longBreak: this.state.longBreak - 1, \r\n            })\r\n        }\r\n    }\r\n\r\n    render() { \r\n        const { active, } = this.state;\r\n        return (\r\n            <section className={'center-wrapper'}>\r\n                <div className={'timer'}>\r\n                    <Clock {...this.state}/>\r\n                    <StartButton active={active} startCounting={this.handleStartButtonClick} />\r\n                    <SettingsButton openSettings={this.handleSettingsButtonClick} />\r\n                    <SettingsPopup \r\n                        {...this.state}\r\n                        addHr={this.handleAddHrClick}\r\n                        subHr={this.handleSubHrClick}\r\n                        addMin={this.handleAddMinClick}\r\n                        subMin={this.handleSubMinClick}\r\n                        addShortBreak={this.handleAddShortBreakClick}\r\n                        subShortBreak={this.handleSubShortBreakClick}\r\n                        addLongBreak={this.handleAddLongBreakClick}\r\n                        subLongBreak={this.handleSubLongBreakClick}\r\n                    />\r\n                </div>\r\n            </section>\r\n        );\r\n    }\r\n}\r\n \r\nexport default Timer;","import React, { Component } from 'react';\r\n\r\nclass AddTask extends Component {\r\n    state = {\r\n        text: '',\r\n        checked: false,\r\n        isCorrect: true,\r\n    }\r\n\r\n    handleText = (e) => {\r\n        this.setState({\r\n            text: e.target.value,\r\n        })\r\n    }\r\n\r\n    handleCheckbox = (e) => {\r\n        this.setState({\r\n            checked: e.target.checked,\r\n        })\r\n    }\r\n\r\n    handleAddClick = (e) => {\r\n        const {text, checked} = this.state\r\n        if (text.length > 0) {\r\n            const add = this.props.addTask(text, checked);\r\n            if (add) {\r\n                this.setState({\r\n                    text: '',\r\n                    checked: false,\r\n                    isCorrect: true,\r\n                })\r\n            }\r\n        } else {\r\n            this.setState({\r\n                isCorrect: false,\r\n            })\r\n        }\r\n    }\r\n\r\n    handleAddKeyDown = (e) => {\r\n        if (e.keyCode === 13) {\r\n            this.handleAddClick();\r\n        }\r\n    }\r\n\r\n    render() { \r\n        return (\r\n            <div className=\"to-do-form\">\r\n                <input onKeyDown={this.handleAddKeyDown} className={'to-do-form__text'} type=\"text\" placeholder={this.state.isCorrect ? 'add task' : \"can't be blank\"} value={this.state.text} onChange={this.handleText}/>\r\n                <input className={'to-do-form__check'} type=\"checkbox\" id='important' checked={this.state.checked} onChange={this.handleCheckbox}/>\r\n                <button className={'to-do-form__btn'} onClick={this.handleAddClick}>+</button>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n \r\nexport default AddTask;","import React from 'react';\r\n\r\nconst Task = (props) => {\r\n\r\n    const importantStyle = {\r\n        color: 'red',\r\n    }\r\n\r\n    const {text, id, active, important, time} = props.task;\r\n    if (active) { \r\n        const addTime = new Date(time).toLocaleTimeString(); \r\n        return (\r\n            <div className={'to-do-tasks'}>\r\n                <div className={'to-do-tasks__task'}>\r\n                    <div>\r\n                        <strong className={'to-do-tasks__text'} style={important ? importantStyle : null}>{text}</strong>\r\n                    </div>\r\n                    <div className={'to-do-tasks__item'}>\r\n                        <span className={'to-do-tasks__information'}>{addTime}</span>\r\n                        <div>\r\n                            <button className={'to-do-tasks__btn functional-btn'} onClick={() => props.changeTaskStatus(id, important)}>Done</button>\r\n                            <button className={'to-do-tasks__btn functional-btn'} onClick={() => props.deleteTask(id)}>X</button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    } else {\r\n        const endTime = new Date(time).toLocaleTimeString();  \r\n        return (\r\n            <div className={'done-tasks'}>\r\n                <div className={'done-tasks__task'}>\r\n                    <strong className={'done-tasks__text'}>{text}</strong> \r\n                    <div className={'done-tasks__item'}>\r\n                        <span className={'done-tasks__information'}>{endTime}</span>\r\n                        <button className={'functional-btn done-tasks__btn'} onClick={() => props.deleteTask(id)}>X</button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n \r\nexport default Task;","import React from 'react';\r\nimport Task from '../Task/Task';\r\n\r\nconst TaskList = (props) => {\r\n\r\n    const active = props.tasks.filter(task => task.active);\r\n    const done = props.tasks.filter(task => !task.active);\r\n\r\n    //sort done tasks list\r\n    done.sort((a, b) => b.time - a.time);\r\n\r\n    const activeTasks = active.map(task => <Task key={task.id} task={task} deleteTask={props.deleteTask} changeTaskStatus={props.changeTaskStatus} />);\r\n    \r\n    const doneTasks = done.map(task => <Task key={task.id} task={task} deleteTask={props.deleteTask} changeTaskStatus={props.changeTaskStatus} />);\r\n    return (\r\n        <div className={'task-list'}>\r\n            <div className={'task-list__to-do-list'}>\r\n                <h3 className={'task-list__title'}>To do</h3>\r\n                {activeTasks.length > 0 ? activeTasks : <p className={'task-list__comments'}>(No tasks)</p>}\r\n            </div>\r\n            <div className={'task-list__done-list'}>\r\n                <h3 className={'task-list__title'}>Done</h3>\r\n                {doneTasks.length > 4 && <p className={'task-list__comments'}>(Last 4 tasks)</p>}\r\n                {doneTasks.slice(0, 4)}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n \r\nexport default TaskList;","import React, { Component } from 'react';\r\nimport AddTask from './AddTask/AddTask';\r\nimport TaskList from './TaskList/TaskList';\r\n\r\nclass ToDo extends Component {\r\n    counter = 0\r\n    state = {\r\n        tasks: []\r\n    }\r\n\r\n    handleDoneButtonClick = (id, important) => {\r\n        let tasks = [...this.state.tasks];\r\n        tasks.forEach(task => {\r\n            if (task.id === id){\r\n                task.active = false;\r\n                task.time = new Date().getTime();\r\n            }\r\n\r\n            if (task.important) {\r\n                this.props.addDoneTasks();\r\n            }\r\n        });\r\n        this.setState({\r\n            tasks\r\n        })\r\n    }\r\n\r\n    handleDeleteButtonClick = (id) => {\r\n        console.log('Delete' + id);\r\n        const tasks = [...this.state.tasks];\r\n        const index = tasks.findIndex(task => task.id === id);\r\n        tasks.splice(index, 1);\r\n        this.setState({\r\n            tasks\r\n        })\r\n    }\r\n\r\n    addTask = (text, ifImportant) => {\r\n        console.log(\"dodany obiekt\");\r\n        const task = {\r\n            id: this.counter,\r\n            text: text,\r\n            important: ifImportant,\r\n            active: true,\r\n            time: new Date().getTime(),\r\n        }\r\n        this.counter++\r\n        \r\n        this.setState(prevState => ({\r\n            tasks: [...prevState.tasks, task]\r\n        }))\r\n        return true;\r\n    }\r\n\r\n    render() { \r\n        return (\r\n            <div className={'to-do-app center-wrapper'}>\r\n                <AddTask addTask={this.addTask}/>\r\n                <TaskList \r\n                    tasks={this.state.tasks} \r\n                    changeTaskStatus={this.handleDoneButtonClick} \r\n                    deleteTask={this.handleDeleteButtonClick}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n \r\nexport default ToDo;","import React from 'react';\r\n\r\nconst Instruction = (props) => {\r\n\r\n    let content = (\r\n        <div className={'instruction'}>\r\n            <ul className={'instruction__list'}>\r\n                <h2 className={'instruction__title'}>Instruction</h2>\r\n                <li>To add task you can either press the button or hit enter</li>\r\n                <hr/>\r\n                <li>To add the priority task, check fire icon next to the text field</li>\r\n                <hr/>\r\n                <li>You will get an extra minute to break time for each completed priority task</li>\r\n                <hr/>\r\n                <li>Next to tasks you will find a timer that shows you when the task has been added or finished</li>\r\n            </ul>\r\n            <button className={'functional-btn instruction__btn'} onClick={props.closeInstructionPopup}>Close</button>\r\n        </div>\r\n    )\r\n\r\n    if (!props.isOpen) {\r\n        content = null;\r\n    }\r\n\r\n    return (\r\n        <div>{content}</div>\r\n    );\r\n}\r\n \r\nexport default Instruction;","import React, { Component } from 'react';\r\nimport Instruction from './Instruction/Instruction';\r\n\r\nclass Header extends Component {\r\n    state = {\r\n        isOpen: true,\r\n    }\r\n\r\n    handleOpenButton = () => {\r\n        this.setState({\r\n            isOpen: true,\r\n        })\r\n    }\r\n\r\n    handleCloseButton = () => {\r\n        this.setState({\r\n            isOpen: false,\r\n        })\r\n    }\r\n\r\n    render() { \r\n        return (\r\n        <header className={\"header\"}>\r\n            <h3 className={'header__title'}>Tomatotimer</h3>\r\n            <button className={'header__info'} onClick={this.handleOpenButton}></button>\r\n            <Instruction isOpen={this.state.isOpen} closeInstructionPopup={this.handleCloseButton}/>\r\n        </header>\r\n        );\r\n    }\r\n}\r\n \r\nexport default Header;","import React, { Component } from 'react';\nimport Timer from './Timer/Timer';\nimport ToDo from './ToDo/ToDo';\nimport Header from './Header/Header';\n\nclass App extends Component {\n\n    state = {\n        doneTasks: 0,\n    }\n\n    addDoneTasks = () => {\n        this.setState({\n            doneTasks: this.state.doneTasks + 1,\n        })\n    }\n    \n    resetAddTasks = () => {\n        this.setState({\n            doneTasks: 0,\n        })\n    }\n\n    render() {\n\n        return(\n            <React.Fragment>\n                <Header />\n                <main className={'main'}>\n                    <Timer \n                        doneTasks={this.state.doneTasks}\n                        resetAddTasks={this.resetAddTasks}\n                    />\n                    <ToDo \n                        addDoneTasks={this.addDoneTasks} \n                    />\n                </main>\n            </React.Fragment>\n        )\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/niceSound.7726bd8e.wav\";"],"sourceRoot":""}